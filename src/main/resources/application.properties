# Server Port
server.port=9494

# DataSource Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/Library
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Hibernate Properties for Schema Auto-update
# Automatically validates or updates the database schema based on the JPA entity mappings.
spring.jpa.hibernate.ddl-auto=update

#springdoc.paths-to-match = /book/**,/**
#springdoc.packages-to-scan = com.example.library.controller
#spring.security.user.name = obayed
#spring.security.user.password = obayed

# JWT Values
security.jwt.secret-key=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
# 1h in millisecond
security.jwt.expiration-time=3600000


# OAuth2 Configuration
## Google Configure
spring.security.oauth2.client.registration.google.client-name = google
spring.security.oauth2.client.registration.google.client-id = 1066729253399-d97h2cdr44us8u4lt68fiunlisbl8gdr.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret = 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
spring.security.oauth2.client.registration.google.client-scope = email,profile

#spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9494/login/oauth2/code/google
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub

## Facebook
## Github